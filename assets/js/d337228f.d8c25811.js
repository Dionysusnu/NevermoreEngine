"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[37247],{29498:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new Maid object","params":[],"returns":[{"desc":"","lua_type":"Maid"}],"function_type":"static","source":{"line":15,"path":"src/maid/src/Shared/Maid.lua"}},{"name":"isMaid","desc":"Returns true if the class is a maid, and false otherwise.","params":[],"returns":[],"function_type":"static","source":{"line":24,"path":"src/maid/src/Shared/Maid.lua"}},{"name":"__newindex","desc":"Add a task to clean up. Tasks given to a maid will be cleaned when","params":[],"returns":[],"function_type":"method","source":{"line":39,"path":"src/maid/src/Shared/Maid.lua"}},{"name":"GiveTask","desc":"Gives a task to the maid for cleanup, but uses an incremented number as a key.","params":[{"name":"task","desc":"An item to clean","lua_type":"MaidTask"}],"returns":[{"desc":"taskId","lua_type":"number"}],"function_type":"method","source":{"line":78,"path":"src/maid/src/Shared/Maid.lua"}},{"name":"GivePromise","desc":"Gives a promise to the maid for clean.","params":[{"name":"promise","desc":"","lua_type":"Promise<T>"}],"returns":[{"desc":"","lua_type":"Promise<T>"}],"function_type":"method","source":{"line":99,"path":"src/maid/src/Shared/Maid.lua"}},{"name":"DoCleaning","desc":"Cleans up all tasks.","params":[],"returns":[],"function_type":"method","source":{"line":118,"path":"src/maid/src/Shared/Maid.lua"}},{"name":"Destroy","desc":"Alias for DoCleaning()","params":[],"returns":[],"function_type":"static","source":{"line":150,"path":"src/maid/src/Shared/Maid.lua"}}],"properties":[],"types":[],"name":"Maid","desc":"Manages the cleaning of events and other things.\\nUseful for encapsulating state and make deconstructors easy","source":{"line":7,"path":"src/maid/src/Shared/Maid.lua"}}')}}]);