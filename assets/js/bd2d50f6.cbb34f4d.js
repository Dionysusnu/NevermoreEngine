"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[46229],{98217:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new signal.","params":[],"returns":[],"function_type":"static","source":{"line":20,"path":"src/signal/src/Shared/Signal.lua"}},{"name":"Fire","desc":"Fire the event with the given arguments. All handlers will be invoked. Handlers follow","params":[],"returns":[],"function_type":"method","source":{"line":47,"path":"src/signal/src/Shared/Signal.lua"}},{"name":"Connect","desc":"Connect a new handler to the event. Returns a connection object that can be disconnected.","params":[],"returns":[],"function_type":"method","source":{"line":67,"path":"src/signal/src/Shared/Signal.lua"}},{"name":"Wait","desc":"Wait for fire to be called, and return the arguments it was given.","params":[],"returns":[],"function_type":"method","source":{"line":88,"path":"src/signal/src/Shared/Signal.lua"}},{"name":"Destroy","desc":"Disconnects all connected events to the signal. Voids the signal as unusable.","params":[],"returns":[],"function_type":"method","source":{"line":101,"path":"src/signal/src/Shared/Signal.lua"}}],"properties":[],"types":[],"name":"Signal","desc":"Lua-side duplication of the API of events on Roblox objects.\\nSignals are needed for to ensure that for local events objects are passed by\\nreference rather than by value where possible, as the BindableEvent objects\\nalways pass signal arguments by value, meaning tables will be deep copied.\\nRoblox\'s deep copy method parses to a non-lua table compatable format.","source":{"line":10,"path":"src/signal/src/Shared/Signal.lua"}}')}}]);