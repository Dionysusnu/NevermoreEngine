"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[80926],{87266:function(e){e.exports=JSON.parse('{"functions":[{"name":"Init","desc":"Initializes the IKService. Should be done via the ServiceBag.","params":[{"name":"serviceBag","desc":"","lua_type":"ServiceBag"}],"returns":[],"function_type":"method","source":{"line":26,"path":"src/ik/src/Server/IKService.lua"}},{"name":"Start","desc":"Starts the IKService. Should be done via the ServiceBag.","params":[],"returns":[],"function_type":"method","source":{"line":37,"path":"src/ik/src/Server/IKService.lua"}},{"name":"GetRig","desc":"Retrieves an IKRig. Binds the rig if it isn\'t already bound.","params":[{"name":"humanoid","desc":"","lua_type":"Humanoid"}],"returns":[{"desc":"","lua_type":"IKRig?"}],"function_type":"method","source":{"line":62,"path":"src/ik/src/Server/IKService.lua"}},{"name":"PromiseRig","desc":"Retrieves an IKRig. Binds the rig if it isn\'t already bound.","params":[{"name":"humanoid","desc":"","lua_type":"Humanoid"}],"returns":[{"desc":"","lua_type":"Promise<IKRig>"}],"function_type":"method","source":{"line":71,"path":"src/ik/src/Server/IKService.lua"}},{"name":"RemoveRig","desc":"Unbinds the rig from the humanoid.","params":[{"name":"humanoid","desc":"","lua_type":"Humanoid"}],"returns":[],"function_type":"method","source":{"line":82,"path":"src/ik/src/Server/IKService.lua"}},{"name":"UpdateServerRigTarget","desc":"Updates the ServerIKRig target for an NPC","params":[{"name":"humanoid","desc":"","lua_type":"Humanoid"},{"name":"target","desc":"","lua_type":"Vector3?"}],"returns":[],"function_type":"method","source":{"line":94,"path":"src/ik/src/Server/IKService.lua"}}],"properties":[],"types":[],"name":"IKService","desc":"Handles the replication of inverse kinematics (IK) from clients to servers","realm":["Server"],"source":{"line":7,"path":"src/ik/src/Server/IKService.lua"}}')}}]);