"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8121],{29567:e=>{e.exports=JSON.parse('{"functions":[{"name":"encodeAsString","desc":"Encodes the value as a string. Note the general format will be such that the string is indexed\\nusing a regular Lua value. For example:\\n\\n```lua\\nprint(EnumUtils.encodeAsString(Enum.KeyCode.E)) --\x3e Enum.KeyCode.E\\n```","params":[{"name":"enumItem","desc":"","lua_type":"EnumItem"}],"returns":[{"desc":"","lua_type":"EnumItem"}],"function_type":"static","source":{"line":20,"path":"src/enumutils/src/Shared/EnumUtils.lua"}},{"name":"isEncodedEnum","desc":"Returns true if the value is an encoded enum","params":[{"name":"value","desc":"String to decode","lua_type":"any?"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":32,"path":"src/enumutils/src/Shared/EnumUtils.lua"}},{"name":"decodeFromString","desc":"Decodes the enum from the string name encoding","params":[{"name":"value","desc":"String to decode","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"EnumItem"}],"function_type":"static","source":{"line":42,"path":"src/enumutils/src/Shared/EnumUtils.lua"}}],"properties":[],"types":[],"name":"EnumUtils","desc":"Helds encode Roblox enums into a string","source":{"line":6,"path":"src/enumutils/src/Shared/EnumUtils.lua"}}')}}]);