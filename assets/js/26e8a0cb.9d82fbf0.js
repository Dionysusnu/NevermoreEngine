"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[55439],{627:function(s){s.exports=JSON.parse('{"functions":[{"name":"getConnectedParts","desc":"Retrieves all connected parts of a part, plus the connected part","params":[],"returns":[],"function_type":"static","source":{"line":12,"path":"src/physicsutils/src/Shared/PhysicsUtils.lua"}},{"name":"estimateBuoyancyContribution","desc":"Estimate buoyancy contributed by parts","params":[],"returns":[],"function_type":"static","source":{"line":27,"path":"src/physicsutils/src/Shared/PhysicsUtils.lua"}},{"name":"getCenterOfMass","desc":"Return\'s the world vector center of mass.","params":[],"returns":[],"function_type":"static","source":{"line":48,"path":"src/physicsutils/src/Shared/PhysicsUtils.lua"}},{"name":"momentOfInertia","desc":"Calculates the moment of inertia of a solid cuboid. This is wrong for Roblox.","params":[],"returns":[],"function_type":"static","source":{"line":63,"path":"src/physicsutils/src/Shared/PhysicsUtils.lua"}},{"name":"bodyMomentOfInertia","desc":"Given a connected body of parts, returns the moment of inertia of these parts","params":[],"returns":[],"function_type":"static","source":{"line":82,"path":"src/physicsutils/src/Shared/PhysicsUtils.lua"}},{"name":"applyForce","desc":"Applies a force to a Roblox body","params":[],"returns":[],"function_type":"static","source":{"line":96,"path":"src/physicsutils/src/Shared/PhysicsUtils.lua"}},{"name":"acceleratePart","desc":"Accelerates a part utilizing newton\'s laws. emittingPart is the part it\'s emitted from.","params":[],"returns":[],"function_type":"static","source":{"line":127,"path":"src/physicsutils/src/Shared/PhysicsUtils.lua"}}],"properties":[],"types":[],"name":"PhysicsUtils","desc":"General physics library for use on Roblox","source":{"line":5,"path":"src/physicsutils/src/Shared/PhysicsUtils.lua"}}')}}]);