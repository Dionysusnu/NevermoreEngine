"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[36030],{47936:function(e){e.exports=JSON.parse('{"functions":[{"name":"isBrio","desc":"Returns whether a value is a Brio","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":39,"path":"src/brio/src/Shared/Brio.lua"}},{"name":"new","desc":"Constructs a new Brio","params":[{"name":"...","desc":"Brio values","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Brio"}],"function_type":"static","source":{"line":48,"path":"src/brio/src/Shared/Brio.lua"}},{"name":"GetDiedSignal","desc":"Gets a signal that will fire when the Brio dies. If the brio is already dead\\ncalling this method will error.","params":[],"returns":[{"desc":"","lua_type":"Signal"}],"function_type":"method","source":{"line":59,"path":"src/brio/src/Shared/Brio.lua"}},{"name":"IsDead","desc":"Returns true is the brio is dead","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":76,"path":"src/brio/src/Shared/Brio.lua"}},{"name":"ErrorIfDead","desc":"Throws an error if the Brio is dead","params":[],"returns":[],"function_type":"method","source":{"line":83,"path":"src/brio/src/Shared/Brio.lua"}},{"name":"ToMaid","desc":"Constructs a new Maid which will clean up when the brio dies.\\nWill error if the Brio is dead.","params":[],"returns":[{"desc":"","lua_type":"Maid"}],"function_type":"method","source":{"line":94,"path":"src/brio/src/Shared/Brio.lua"}},{"name":"GetValue","desc":"If the brio is not dead, will return the values unpacked from the brio.","params":[],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","source":{"line":111,"path":"src/brio/src/Shared/Brio.lua"}},{"name":"Destroy","desc":"Kills the Brio.","params":[],"returns":[],"function_type":"method","source":{"line":120,"path":"src/brio/src/Shared/Brio.lua"}}],"properties":[{"name":"DEAD","desc":"An already dead brio which may be used for identity purposes","lua_type":"Brio","source":{"line":141,"path":"src/brio/src/Shared/Brio.lua"}}],"types":[],"name":"Brio","desc":"Brios are wrap a value and provide the following constraints:\\n\\n- Can be in 2 states, dead or alive\\n- While alive, can retrieve values\\n- While dead, retrieving values is forbidden\\n- Died will fire once upon death\\n\\nBrios encapsulate the \\"lifetime\\" of a valid resource. Unlike a maid, they\\n- Can only die once\\n- Have less memory leaks\\n- Cannot be reentered\\n\\nCalling :Destroy() or :Kill() after death does nothing. Brios cannot be resurrected.\\n\\nUseful for downstream events where you want to emit a resource. Typically\\nbrios should be killed when their source is killed.\\n\\nBrios are intended to be merged with downstream brios so create a chain of reliable\\nresources.\\n\\nAnything may \\"kill\\" a brio by calling :Destroy() or :Kill().","source":{"line":26,"path":"src/brio/src/Shared/Brio.lua"}}')}}]);